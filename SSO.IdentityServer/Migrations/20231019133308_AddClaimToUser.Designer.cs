// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SSO.IdentityServer.DbContexts;

#nullable disable

namespace SSO.IdentityServer.Migrations
{
    [DbContext(typeof(IdentityDbContext))]
    [Migration("20231019133308_AddClaimToUser")]
    partial class AddClaimToUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SSO.IdentityServer.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Subject")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Active = true,
                            ConcurrencyStamp = "60bb9522-f7a5-46db-af08-ce66e013a217",
                            Password = "AQAAAAEAACcQAAAAEIi0HEeTvqcxwhA+dR/RKOEIfdGn1VIKy0P+AhKOp5vIdsb80zmPxqbhxllt5AmkKg==",
                            Subject = "d860efca-22d9-47fd-8249-791ba61b07c7",
                            UserName = "David"
                        },
                        new
                        {
                            Id = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"),
                            Active = true,
                            ConcurrencyStamp = "6bc4f59b-0c92-4049-a827-dd2de7b9ca35",
                            Password = "AQAAAAEAACcQAAAAEHgXILmaP4pu/Kz8M2cASmfD/XsHykcmTNyFTvQQiwyWaLWjWAlxBH1L5pQfSyRYqw==",
                            Subject = "b7539694-97e7-4dfe-84da-b4256e1ff5c7",
                            UserName = "Yusuf"
                        },
                        new
                        {
                            Id = new Guid("5f05b022-764e-48c7-a200-c50e9ff062ea"),
                            Active = true,
                            ConcurrencyStamp = "48c24717-69be-4a3a-9253-e8989af2854b",
                            Password = "AQAAAAEAACcQAAAAEHgXILmaP4pu/Kz8M2cASmfD/XsHykcmTNyFTvQQiwyWaLWjWAlxBH1L5pQfSyRYqw==",
                            Subject = "e7ea84c8-b140-4e56-85a8-b0df8b4b4fc6",
                            UserName = "Muhammad"
                        });
                });

            modelBuilder.Entity("SSO.IdentityServer.Entities.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");

                    b.HasData(
                        new
                        {
                            Id = new Guid("62d2b84e-a0d3-46d5-a22c-1cd0d80ddb0d"),
                            ConcurrencyStamp = "7c7e3f7b-5d79-414b-8a4d-e6d27523fb7d",
                            Type = "given_name",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "David"
                        },
                        new
                        {
                            Id = new Guid("1367569b-390e-428e-a75f-c1ebb95285b4"),
                            ConcurrencyStamp = "1bce4889-0c15-43e0-9ed8-a28195db0eb8",
                            Type = "family_name",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "Flagg"
                        },
                        new
                        {
                            Id = new Guid("23651d20-a20c-42a8-a549-009e1c2ac3a7"),
                            ConcurrencyStamp = "8f367ee3-fb83-41af-9c95-7b5ff376cfce",
                            Type = "country",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "nl"
                        },
                        new
                        {
                            Id = new Guid("469ca304-e9a1-4a34-93be-8247bbcc88d2"),
                            ConcurrencyStamp = "94fec055-d555-46e1-86f3-61ee0594a024",
                            Type = "role",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "FreeUser"
                        },
                        new
                        {
                            Id = new Guid("262a8968-3c48-44b5-babe-c0555fc8170e"),
                            ConcurrencyStamp = "b1adf250-ced3-4f15-b0c7-f632ea964050",
                            Type = "client",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "client1"
                        },
                        new
                        {
                            Id = new Guid("a545e7fb-e19c-4ced-b20f-74e91f6a6b2c"),
                            ConcurrencyStamp = "e16fa0b7-bbd7-4f7e-9baa-7b518cbaf70a",
                            Type = "given_name",
                            UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "Yusuf"
                        },
                        new
                        {
                            Id = new Guid("8ba3ca5d-00b9-400a-817c-14e41de5e77e"),
                            ConcurrencyStamp = "b6b6c1ad-164f-4d29-8168-127938fe9d87",
                            Type = "family_name",
                            UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "Naheem"
                        },
                        new
                        {
                            Id = new Guid("16345d0c-8b63-4486-9cb4-42b8837a8a3d"),
                            ConcurrencyStamp = "39f10d13-8c99-4699-9183-f8e22252af71",
                            Type = "country",
                            UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "pk"
                        },
                        new
                        {
                            Id = new Guid("b130cf1d-8a4f-476c-9c08-712fc3c5c372"),
                            ConcurrencyStamp = "8167902f-733e-41bf-9911-1bc2f0a9983a",
                            Type = "role",
                            UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "PayingUser"
                        },
                        new
                        {
                            Id = new Guid("847a59d1-e6e4-4f1f-9c09-7d976e26cabd"),
                            ConcurrencyStamp = "085ea63d-0e0f-4bac-91bf-04167bd5216a",
                            Type = "client",
                            UserId = new Guid("96053525-f4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "client1"
                        },
                        new
                        {
                            Id = new Guid("69e2d356-12a6-43a1-9df9-6c8cd5a6596f"),
                            ConcurrencyStamp = "999096d7-4f32-471b-8941-03472b78dc7d",
                            Type = "given_name",
                            UserId = new Guid("5f05b022-764e-48c7-a200-c50e9ff062ea"),
                            Value = "Muhammad"
                        },
                        new
                        {
                            Id = new Guid("47cfa9f1-a170-486c-9ea7-dc506b04284c"),
                            ConcurrencyStamp = "09e3b45d-9a64-4dd6-a4d9-a7db2582a72a",
                            Type = "client",
                            UserId = new Guid("5f05b022-764e-48c7-a200-c50e9ff062ea"),
                            Value = "client2"
                        },
                        new
                        {
                            Id = new Guid("7967dc90-7530-40b4-a163-5af4b8518c0f"),
                            ConcurrencyStamp = "bdb6df9f-f4e5-46ff-a20d-3671358f9cf4",
                            Type = "client",
                            UserId = new Guid("5f05b022-764e-48c7-a200-c50e9ff062ea"),
                            Value = "clientblazor"
                        });
                });

            modelBuilder.Entity("SSO.IdentityServer.Entities.UserClaim", b =>
                {
                    b.HasOne("SSO.IdentityServer.Entities.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SSO.IdentityServer.Entities.User", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
